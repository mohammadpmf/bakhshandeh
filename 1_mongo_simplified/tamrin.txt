use poulstar

db.createCollection("teachers")
db.createCollection("students")
db.createCollection("staff")

show collections

db.teachers.insertOne({name: "Mohammad", surname: "Fallah", number: "09356640204"})
db.teachers.insertOne({name: "Mohammad", "surname": "Fallah", number: "09356640204"})
این هم باشه گیر نمیده. یعنی دور نام خانوادگی کوتیشن نذاشتم.
db.teachers.insertOne({name: "Mohammad", 'surname': 'Fallah', number: "09119119911"})
این طوری هم گیر نداد. یعنی کوتیشن هم میشناسه.
اینا همه توی کامند لاین هست. توی گرافیکی گیر میده و باید حتما دابل کوتیشن دور اسم
کلید ها باشه و ویرگول اضافه هم نباید باشه و دقیقا به فرمت جیسون باشه.

این هم یک داده الکی که میشه داخل همون کالکشن اضافه کرد
db.teachers.insertOne({
  title: "Post Title 1",
  body: "Body of post.",
  category: "News",
  likes: 1,
  tags: ["news", "events"],
  date: Date(),
  number: "0123"
})

db.teachers.insertMany(
[{
  name: 'Fatemeh',
  surname: "Motamed",
  number: '09345874887'
},
{
  name: "Ailin",
  'surname': 'Hajipour',
  "number": "08974587796"
},
])

این هم یک سری اینزرت منی الکی که البته داخل کالکشن دانش آموزان هست.
db.students.insertMany([  
  {
    title: "Post Title 2",
    body: "Body of post.",
    category: "Event",
    likes: 2,
    tags: ["news", "events"],
    date: Date()
  },
  {
    title: "Post Title 3",
    body: "Body of post.",
    category: "Technology",
    likes: 3,
    tags: ["news", "events"],
    date: Date()
  },
  {
    title: "Post Title 4",
    body: "Body of post.",
    category: "Event",
    likes: 4,
    tags: ["news", "events"],
    date: Date()
  }
])


db.teachers.find()
db.teachers.find({}, {_id: 0, name:1, number:1})
db.teachers.find({}, {_id: 0, name:1})
db.teachers.find({}, {_id: 0, number: 0})
db.teachers.find({name: "Mohammad"})
db.teachers.findOne({name: "Mohammad"})
db.teachers.find({name: "Mohammad"}, {_id: 0, name:1, number:1})
db.teachers.findOne({name: "Mohammad"}, {_id: 0, name:1, number:1})


db.teachers.updateOne({name:"Mohammad" }, { $set: { surname: 'Falah' } } )

اگر وجود نداشت و بخوایم اضافه کنیم، به عنوان ورودی سوم دیکشنری آپزرت رو میدیم.
db.teachers.updateOne(
  { name: "Mohammad 2" }, 
  {
    $set: 
      {
        name: "Mohammad 2",
        surname: "Fallah",
        number: "01234567890"
      }
  }, 
  { upsert: true }
)

این هم برای تغییر همه با یک دستور که افزایش میده.
db.students.updateMany({}, { $inc: { likes: 10 } })


db.teachers.deleteOne({ name: "Mohammad 2" })
db.teachers.deleteOne({ name: "Mohammad" })
db.teachers.deleteMany({ name: "Mohammad" })
db.teachers.deleteOne({ name: "Mohammad" })
____________________________________________________________________________________________

db.teachers.find({ name: { $eq : "Mohammad"}})
db.teachers.find({ name: { $ne : "Mohammad"}})
db.teachers.find({ name: { $gte : "Mohammad"}})
db.teachers.find({ name: { $lt : "Mohammad"}})
db.teachers.find({ name: { $in : ["Fatemeh", "Zahra", "Neda"]}})
db.teachers.find({ name: { $in : ["Fatemeh", "Ailin"]}})
db.teachers.find({ name: { $not: {$in : ["Fatemeh", "Ailin", "Mohammad"]}}})
این یکی رو شانسی پیدا کردم. نات و این با هم ترکیب شده. یعنی مثل همون بالایی هست فقط
ساده تر هست.
db.teachers.find({ name: { $nin : ["Fatemeh", "Ailin", "Mohammad"]}})

برای سرچ کردن بر اساس چند چیز
db.teachers.find({ $or : [{name: "Ailin"}, {name: "Fatemeh"}]})
db.teachers.find({ $or : [{name: "Ailin"}, {number: "09356640204"}]})

برای گروه کردن بر اساس یک فیلد
db.teachers.aggregate(
    [ { $group : { _id : "$name" } } ]
)
db.teachers.aggregate(
    [ { $group : { _id : "$surname" } } ]
)
db.teachers.aggregate(
    [ { $group : { _id : "$number" } } ]
)

برای گرفتن 3 آیتم
db.teachers.aggregate([ { $limit: 3 } ])

این هم مثال آخری هست. از اینجا به بعد دیگه برای کلاس ها لازم نیست.
db.teachers.aggregate([
  {
    $project: {
      "name": 1,
      "surname": 1,
    }
  },
  {
    $limit: 4
  }
])
